name: CICD
on:
  pull_request: # https://docs.github.com/en/webhooks/webhook-events-and-payloads#pull_request
    types: [opened, reopened, synchronize] # A PR was created, re-opened, or head branch was updated.
  push: # https://docs.github.com/en/webhooks/webhook-events-and-payloads#push
    branches: [main] # Changes were merged/pushed to main.
  release: # https://docs.github.com/en/webhooks/webhook-events-and-payloads?actionType=released#release
    types: [released] # A release was published, or a pre-release was changed to a release.

permissions:
  contents: write # Create releases and publish to pages

jobs:
  cicd:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Include main branch for version update check

      - name: Set PATH # Must be done to find pipx and poetry commands
        run: echo "$(python3 -m site --user-base)/bin:${HOME}/.local/bin:${PATH}" >> $GITHUB_PATH

      - name: Install Poetry # Must be done before Setup Python to use caching
        run: |
          pip install -U pip pipx
          pipx install poetry

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"
          cache: "poetry"

      - name: Install Mise
        run: curl https://mise.run | sh

      - name: Install Dependencies
        run: mise run init

      - name: Lint
        run: mise run lint

      - name: Test
        run: mise run test

      - name: Automatic Release
        if: ${{ github.event_name == 'push' }}
        run: |
          mise run release TOKEN=${{ secrets.GITHUB_TOKEN }}

      - name: Publish Documentation
        if: ${{ github.event_name == 'release' }}
        run: mise run docs

      - name: Publish Package
        if: ${{ github.event_name == 'release' }}
        run: |
          poetry config pypi-token.pypi ${{ secrets.PYPI_TOKEN }}
          mise run publish
