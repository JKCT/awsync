{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"awsync","text":"<p>An asynchronous, fully-typed AWS API library with a focus on being understandable, reliable, and maintainable.</p> <p>Read the documentation</p> <p>NOTE: Currently a work in progress! Only a few API methods currently implemented for testing and development.</p>"},{"location":"#usage","title":"Usage","text":"<pre><code>\"Module main.\"\nfrom asyncio import run\nfrom httpx import AsyncClient\n\nfrom awsync.client import Client\nfrom awsync.models.aws import Region, Credentials\n\n\nasync def main() -&gt; int:\n    \"Main function.\"\n    async with AsyncClient() as httpx_client:\n        client = Client(\n            credentials=Credentials.from_environment(),\n            httpx_client=httpx_client,\n        )\n        response = await client.list_stack_resources(\n            region=Region.us_east_1, stack_name=\"Example-Stack-Name\"\n        )\n        print(response)\n    return 0\n\n\nif __name__ == \"__main__\":\n    run(main())\n</code></pre>"},{"location":"#local-developer-setup","title":"Local Developer Setup","text":"<p>Requirements:</p> <ul> <li>python 3.8 or greater</li> <li>poetry</li> <li>make</li> </ul>"},{"location":"#package-management","title":"Package Management","text":"<p>This repository users poetry for python package management.</p> <ul> <li><code>poetry install --sync</code> install/update dependencies, aliased to <code>make init</code>.</li> <li><code>poetry add</code> add a dependency ie. <code>poetry add httpx</code>.</li> <li><code>poetry add -D</code> add a development dependency ie. <code>poetry add -D black</code>.</li> <li><code>poetry remove</code> remove a dependency ie. <code>poetry remove httpx</code>.</li> <li><code>poetry shell</code> activate the python virtual environment.</li> <li><code>exit</code> exit the python virtual environment.</li> </ul>"},{"location":"#repository-mangement","title":"Repository Mangement","text":"<ul> <li><code>make run</code> runs the main module.</li> <li><code>make pr</code> runs all pull request pre-checks below.</li> <li><code>make format</code> runs code formatter.</li> <li><code>make lint</code> checks code linting.</li> <li><code>make docs</code> publishes documentation to GitHub pages.</li> <li><code>make release</code> creates a GitHub release.</li> <li><code>make publish</code> publishes package to Pypi.</li> <li><code>make test</code> runs tests.</li> </ul>"},{"location":"#repository-todo","title":"Repository TODO:","text":"<ul> <li>Documentation with mkDocs</li> <li>Automatic Publish CICD</li> <li>pylint</li> <li>Template Repository setup script</li> <li>Test Makefile replacements</li> <li>mise</li> <li>Poetry run</li> <li>doit</li> <li>Code generation from JSON</li> </ul>"}]}